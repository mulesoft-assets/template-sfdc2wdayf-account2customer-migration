<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">

	<flow name="businessLogicFlow" doc:id="884f86c5-66e1-4701-bb9b-594c2a60abf3">
		<batch:job jobName="migrateObjectsBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc">
			<batch:process-records>
				<batch:step name="getCustomerFromWorkdayStep" doc:id="232087de-e311-49c1-a890-439c65ea1af2">
					<ee:transform doc:name="Prepare Get Customer Request" doc:id="0e02f46c-ae8d-46ac-b5dc-57f0da276a19" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="getCustomerRequest" ><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
    ns0#Get_Customers_Request: {
        ns0#Request_References: {
            ns0#Customer_Reference: {
                ns0#ID @(ns0#"type": "Customer_Reference_ID" ): payload.Id
            }
        },
        ns0#Response_Group: {
            ns0#Include_Reference    : true,
            ns0#Include_Customer_Data: true
        }
    }
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<workday:revenue-management doc:name="Revenue management - Get Customers" doc:id="acf9fa0c-bb76-4c54-ac5a-28121d247e43" config-ref="Workday_Config_version_30" target="getCustomerResponse" operation="Get_Customers">
						<ee:repeatable-file-store-stream inMemorySize="2048" />
						<workday:content ><![CDATA[#[vars.getCustomerRequest]]]></workday:content>
					</workday:revenue-management>
					<ee:transform doc:name="Prepare Workday Customer Reference" doc:id="0e44967e-228c-48ab-a08d-cf1036662e9e" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
---

payload ++ { 
	wdayfCustomerReference: {
		"type": vars.getCustomerResponse.body.ns0#Get_Customers_Response.ns0#Response_Data.ns0#Customer.ns0#Customer_Reference.ns0#ID.@ns0#"type",
		value: vars.getCustomerResponse.body.ns0#Get_Customers_Response.ns0#Response_Data.ns0#Customer.ns0#Customer_Reference.ns0#ID
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
            </batch:step>
            <batch:step name="upsertCustomersInWorkdayStep" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<ee:transform doc:name="Prepare Put Customer Request" doc:id="80b25c68-5026-44e4-b3fe-af1b593cb905" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc

fun countryMapping(salesforceCountry) =
	if (salesforceCountry == 'USA') 'USA' 
	else p('wdayf.country')


fun industryToCustomerCategoryMapping(industry) =
	if (industry == 'Biotechnology') 'CUSTOMER_CATEGORY-6'
	else if (industry == 'Retail') 'CUSTOMER_CATEGORY-7'
	else if (industry == 'Manufacturing') 'CUSTOMER_CATEGORY-4-8'
	else if (industry == 'Hospitality') 'CUSTOMER_CATEGORY-4'
	else if (industry == 'Technology') 'CUSTOMER_CATEGORY-5'
	else if (industry == 'Finance') 'CUSTOMER_CATEGORY-1'
	else if (industry == 'Healthcare') 'CUSTOMER_CATEGORY-6-9'
	else "CUSTOMER_CATEGORY-3"

fun stateMapping(salesforceState) = 
	if (salesforceState == 'CA') { workdayState:'USA-CA' } else { workdayState: p("wdayf.state") }

---

{
	ns0#Submit_Customer_Request: {
		(ns0#Customer_Reference: {
			ns0#ID @(ns0#"type": payload.wdayfCustomerReference."type"): payload.wdayfCustomerReference.value
		}) if payload.wdayfCustomerReference.value != null,
		ns0#Customer_Data: {
			ns0#Customer_Reference_ID: payload.Id,
			ns0#Customer_Name: payload.Name,
			ns0#Customer_Category_Reference: {
				ns0#ID @(ns0#"type": "Customer_Category_ID"): industryToCustomerCategoryMapping(payload.Industry) default "CUSTOMER_CATEGORY-3"
			},
			ns0#Business_Entity_Data: {
				ns0#Business_Entity_Name: payload.Name,
				ns0#Contact_Data: {
					ns0#Address_Data: {
						ns0#Country_Reference: {
							ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): countryMapping(payload.BillingAddress.country) default p('wdayf.country')
						},
						ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1"): payload.BillingAddress.street default p('wdayf.street'),
						ns0#Municipality: payload.BillingAddress.city default p('wdayf.city'),
						ns0#Country_Region_Reference: {
							ns0#ID @(ns0#"type": "Country_Region_ID"): stateMapping(payload.BillingAddress.state).workdayState default p('wdayf.state')
						},
						ns0#Postal_Code: payload.BillingAddress.postalCode default p('wdayf.postalCode'),
						ns0#Usage_Data @(ns0#Public: false): {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "BUSINESS"
								}
							}
						}
					},
					ns0#Phone_Data: {
						ns0#Phone_Number: payload.Phone default p('wdayf.phone'),
						ns0#Phone_Device_Type_Reference: {
							ns0#ID @(ns0#"type": "Phone_Device_Type_ID"): "1063.5"
						},
						ns0#Usage_Data @(ns0#Public: true): {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "BUSINESS"
								}
							}
						}
					},
					(ns0#Web_Address_Data: {
						ns0#Web_Address: if (payload.Website matches /http(s)?:\/\/.*/) payload.Website else "http://" ++ payload.Website,
						ns0#Usage_Data: {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "BUSINESS"
								}
							}
						}
					}) if payload.Website != null
				}
			}
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:revenue-management operation="Submit_Customer" doc:name="Revenue management - Submit Customer" doc:id="fe94fcc8-58f4-4adb-9197-277a1dc4ec19" config-ref="Workday_Config_version_30"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete >
            <scatter-gather doc:name="Scatter-Gather" doc:id="ef2964ef-0b85-4c6c-a5ee-b834df639e7b">
                <route>
                    <logger level="INFO" doc:name="Migration process has finished!" doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished!" />
                </route>
                <route>
                    <ee:transform doc:name="Prepare migration result email" doc:id="d55c25e1-4f6d-4b2d-b6f5-3d80f14d1747" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
 "Migration Report: \n"

 ++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
 ++ "\n Total Records: "				++ payload.totalRecords!
 ++ "\n Successful Records: "		++ payload.successfulRecords!
 ++ "\n Failed Records: "			++ payload.failedRecords!
 ++ "\n Loaded Records: "			++ payload.loadedRecords!
 ++ "\n Processed Records: " 		++ payload.processedRecords! ]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<email:send config-ref="Gmail_SMTP" doc:name="Send migration result email"
                                doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}"
                                subject="${mail.subject}">
                        <email:to-addresses>
                            <email:to-address value="${mail.to}" />
                        </email:to-addresses>
                    </email:send>
                </route>
            </scatter-gather>
        </batch:on-complete>
    </batch:job>
</flow>
<flow name="mainFlow" doc:id="7c0a5bef-b3d5-442f-bff3-10d038f69a5e" >
    <salesforce:query doc:name="Select Accounts from SFDC" config-ref="Salesforce_Config">
			<salesforce:salesforce-query>SELECT Id,Industry,Name,Website,BillingAddress,Phone FROM Account WHERE NumberOfEmployees &gt; 50000</salesforce:salesforce-query>
		</salesforce:query>
		<flow-ref doc:name="businessLogicFlow" doc:id="91360ede-4d71-44c7-9b64-8ee762e04ea0" name="businessLogicFlow"/>
    <error-handler >
        <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
            <flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow" />
        </on-error-propagate>
    </error-handler>
</flow>
</mule>


        